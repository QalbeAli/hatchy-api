{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Voucher": {
				"properties": {
					"blockchainId": {
						"type": "string"
					},
					"uid": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"category": {
						"type": "string"
					},
					"contract": {
						"type": "string"
					},
					"contractType": {
						"type": "string",
						"enum": [
							"ERC20",
							"ERC721",
							"ERC1155"
						]
					},
					"holder": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"blockchain",
							"game"
						]
					},
					"userId": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"receiver": {
						"type": "string"
					},
					"tokenId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"blockchainId",
					"uid",
					"amount",
					"category",
					"contract",
					"contractType",
					"name",
					"type",
					"userId",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MessageResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BigNumber": {},
			"VoucherClaimSignature": {
				"properties": {
					"rewardContractType": {
						"type": "number",
						"format": "double"
					},
					"rewardHolderAddress": {
						"type": "string"
					},
					"rewardContract": {
						"type": "string"
					},
					"receiver": {
						"type": "string"
					},
					"amount": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BigNumber"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"claimableUntil": {
						"type": "number",
						"format": "double"
					},
					"voucherId": {
						"type": "string"
					},
					"signature": {
						"type": "string"
					},
					"tokenId": {
						"type": "string"
					},
					"eggType": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"rewardContractType",
					"rewardHolderAddress",
					"rewardContract",
					"receiver",
					"amount",
					"claimableUntil",
					"voucherId",
					"signature"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BatchVoucherClaimSignature": {
				"properties": {
					"rewardContractType": {
						"type": "number",
						"format": "double"
					},
					"rewardHolderAddress": {
						"type": "string"
					},
					"rewardContract": {
						"type": "string"
					},
					"receiver": {
						"type": "string"
					},
					"tokenIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"claimableUntil": {
						"type": "number",
						"format": "double"
					},
					"voucherIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"signature": {
						"type": "string"
					}
				},
				"required": [
					"rewardContractType",
					"rewardHolderAddress",
					"rewardContract",
					"receiver",
					"amounts",
					"claimableUntil",
					"voucherIds",
					"signature"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DepositSignature": {
				"properties": {
					"payload": {
						"items": {},
						"type": "array"
					},
					"signature": {
						"type": "string"
					}
				},
				"required": [
					"payload",
					"signature"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"referralCode": {
						"type": "string"
					},
					"referralCount": {
						"type": "number",
						"format": "double"
					},
					"referrerId": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					},
					"photoUrl": {
						"type": "string"
					},
					"disabled": {
						"type": "boolean"
					},
					"roles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"bio": {
						"type": "string"
					},
					"xpPoints": {
						"type": "number",
						"format": "double"
					},
					"mainWallet": {
						"type": "string"
					},
					"internalWallet": {
						"type": "string"
					},
					"vouchersMerged": {
						"type": "boolean"
					},
					"discordConfirmed": {
						"type": "boolean"
					},
					"discordId": {
						"type": "string"
					},
					"discordUsername": {
						"type": "string"
					},
					"wallets": {
						"items": {
							"properties": {
								"createdAt": {
									"type": "number",
									"format": "double"
								},
								"linked": {
									"type": "boolean"
								},
								"nonce": {
									"type": "string"
								},
								"address": {
									"type": "string"
								}
							},
							"required": [
								"createdAt",
								"linked",
								"nonce",
								"address"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"uid",
					"email",
					"referralCode",
					"referralCount",
					"internalWallet"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Wallet": {
				"properties": {
					"userId": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"mainWallet": {
						"type": "boolean"
					},
					"privateKey": {
						"type": "string"
					},
					"publicKey": {
						"type": "string"
					},
					"seedPhrase": {
						"type": "string"
					},
					"isInternalWallet": {
						"type": "boolean"
					}
				},
				"required": [
					"userId",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UltigenMonster": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"element": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"monsterId": {
						"type": "number",
						"format": "double"
					},
					"level": {
						"type": "number",
						"format": "double"
					},
					"stage": {
						"type": "number",
						"format": "double"
					},
					"xp": {
						"type": "number",
						"format": "double"
					},
					"skills": {
						"items": {},
						"type": "array"
					},
					"walkSpeed": {
						"type": "number",
						"format": "double"
					},
					"attackDamage": {
						"type": "number",
						"format": "double"
					},
					"aspd": {
						"type": "number",
						"format": "double"
					},
					"health": {
						"type": "number",
						"format": "double"
					},
					"behavior": {
						"type": "string"
					},
					"dps": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"element",
					"image",
					"monsterId",
					"level",
					"stage",
					"xp",
					"skills",
					"walkSpeed",
					"attackDamage",
					"aspd",
					"health",
					"behavior",
					"dps"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UltigenEggsBalance": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"element": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"element",
					"image",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ScoreItem": {
				"properties": {
					"gameId": {
						"type": "string"
					},
					"score": {
						"type": "number",
						"format": "double"
					},
					"userId": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"gameId",
					"score",
					"userId",
					"username",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RankItem": {
				"properties": {
					"gameId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"rank": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"gameId",
					"userId",
					"rank",
					"username",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HatchyBalance": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"element": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"commonAmount": {
						"type": "number",
						"format": "double"
					},
					"shinyAmount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"element",
					"image",
					"commonAmount",
					"shinyAmount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GameSave": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"gameId": {
						"type": "string"
					},
					"saveName": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"uid",
					"gameId",
					"saveName",
					"userId",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": {}
			},
			"Game": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"itchioEmbedLink": {
						"type": "string"
					},
					"itchioLink": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"requirement": {
						"type": "string"
					},
					"views": {
						"type": "number",
						"format": "double"
					},
					"slug": {
						"type": "string"
					},
					"deeplink": {
						"type": "string"
					},
					"previewImage": {
						"type": "string"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"downloadLink": {
						"type": "string"
					},
					"androidLink": {
						"type": "string"
					},
					"iosLink": {
						"type": "string"
					}
				},
				"required": [
					"uid",
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Contract": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"chainId": {
						"type": "number",
						"format": "double"
					},
					"link": {
						"type": "string"
					},
					"contractType": {
						"type": "string",
						"enum": [
							"ERC721",
							"ERC1155",
							"ERC20",
							"Other"
						]
					},
					"deployDate": {
						"type": "string"
					},
					"owner": {
						"type": "string"
					},
					"verified": {
						"type": "boolean"
					}
				},
				"required": [
					"uid",
					"name",
					"address",
					"chainId",
					"link",
					"deployDate",
					"owner",
					"verified"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Contract.Exclude_keyofContract.uid-or-owner__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"chainId": {
						"type": "number",
						"format": "double"
					},
					"link": {
						"type": "string"
					},
					"contractType": {
						"type": "string",
						"enum": [
							"ERC721",
							"ERC1155",
							"ERC20",
							"Other"
						]
					},
					"deployDate": {
						"type": "string"
					},
					"verified": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"address",
					"chainId",
					"link",
					"deployDate",
					"verified"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Contract.uid-or-owner_": {
				"$ref": "#/components/schemas/Pick_Contract.Exclude_keyofContract.uid-or-owner__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateContractParams": {
				"$ref": "#/components/schemas/Omit_Contract.uid-or-owner_"
			},
			"WalletSignatureMessage": {
				"properties": {
					"message": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"nonce"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthCustomToken": {
				"properties": {
					"message": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AssetAgreement": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"accepted": {
						"type": "boolean"
					}
				},
				"required": [
					"uid",
					"date",
					"role",
					"accepted"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Asset": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"contract": {
						"type": "string"
					},
					"holder": {
						"type": "string"
					},
					"contractType": {
						"type": "string",
						"enum": [
							"ERC721",
							"ERC1155",
							"ERC20"
						]
					},
					"tokenId": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"blockchain",
							"game"
						]
					},
					"property": {
						"type": "string"
					},
					"image": {
						"type": "string"
					}
				},
				"required": [
					"uid",
					"name",
					"category",
					"image"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Asset.Exclude_keyofAsset.uid__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"contractType": {
						"type": "string",
						"enum": [
							"ERC721",
							"ERC1155",
							"ERC20"
						]
					},
					"category": {
						"type": "string"
					},
					"contract": {
						"type": "string"
					},
					"holder": {
						"type": "string"
					},
					"tokenId": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"blockchain",
							"game"
						]
					},
					"property": {
						"type": "string"
					},
					"image": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"category",
					"image"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Asset.uid_": {
				"$ref": "#/components/schemas/Pick_Asset.Exclude_keyofAsset.uid__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateAssetParams": {
				"$ref": "#/components/schemas/Omit_Asset.uid_"
			},
			"ApiKey": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"apiKey": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"permissions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"appId": {
						"type": "string"
					},
					"balance": {
						"properties": {},
						"additionalProperties": {
							"type": "number",
							"format": "double"
						},
						"type": "object"
					}
				},
				"required": [
					"uid",
					"name",
					"apiKey",
					"createdAt",
					"updatedAt",
					"permissions",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_ApiKey.Exclude_keyofApiKey.uid-or-createdAt-or-updatedAt-or-apiKey__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"permissions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"appId": {
						"type": "string"
					},
					"balance": {
						"properties": {},
						"additionalProperties": {
							"type": "number",
							"format": "double"
						},
						"type": "object"
					}
				},
				"required": [
					"name",
					"permissions",
					"balance"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_ApiKey.uid-or-createdAt-or-updatedAt-or-apiKey_": {
				"$ref": "#/components/schemas/Pick_ApiKey.Exclude_keyofApiKey.uid-or-createdAt-or-updatedAt-or-apiKey__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateApiKeyParams": {
				"$ref": "#/components/schemas/Omit_ApiKey.uid-or-createdAt-or-updatedAt-or-apiKey_"
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			},
			"tsoa_auth": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "http://swagger.io/api/oauth/dialog",
						"scopes": {
							"write:pets": "modify things",
							"read:pets": "read things"
						}
					}
				}
			}
		}
	},
	"info": {
		"title": "hatchyverse-api",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/vouchers": {
			"get": {
				"operationId": "GetVouchers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Voucher"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/vouchers/random": {
			"get": {
				"operationId": "GetRandomBigNumber",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [],
				"parameters": []
			}
		},
		"/vouchers/admin/give": {
			"post": {
				"operationId": "GiveVoucherToUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"overrideTokenId": {
										"type": "string"
									},
									"amount": {
										"type": "number",
										"format": "double"
									},
									"assetId": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"amount",
									"assetId",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/vouchers/apikey/give": {
			"post": {
				"operationId": "GiveVoucherWithApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"api_key_rewards": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									},
									"assetId": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"amount",
									"assetId",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/vouchers/transfer": {
			"post": {
				"operationId": "TransferVouchers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"receiverEmail": {
										"type": "string"
									},
									"voucherAmounts": {
										"items": {
											"type": "number",
											"format": "double"
										},
										"type": "array"
									},
									"voucherIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"receiverEmail",
									"voucherAmounts",
									"voucherIds"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/vouchers/claim": {
			"post": {
				"operationId": "GetVoucherClaimSignature",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoucherClaimSignature"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"address": {
										"type": "string"
									},
									"voucherId": {
										"type": "string"
									}
								},
								"required": [
									"address",
									"voucherId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/vouchers/claim/batch": {
			"post": {
				"operationId": "GetBatchVoucherClaimSignature",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BatchVoucherClaimSignature"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"address": {
										"type": "string"
									},
									"voucherIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"address",
									"voucherIds"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/vouchers/batch": {
			"delete": {
				"operationId": "DeleteBatchVouchers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"voucherIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"voucherIds"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/vouchers/deposit/signature": {
			"post": {
				"operationId": "GetDepositSignature",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DepositSignature"
								}
							}
						}
					}
				},
				"tags": [
					"Vouchers"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									},
									"amounts": {
										"items": {
											"type": "number",
											"format": "double"
										},
										"type": "array"
									},
									"tokenIds": {
										"items": {
											"type": "number",
											"format": "double"
										},
										"type": "array"
									},
									"assetAddress": {
										"type": "string"
									},
									"assetType": {
										"type": "string",
										"enum": [
											"ERC20",
											"ERC1155",
											"ERC721"
										]
									},
									"receiver": {
										"type": "string"
									}
								},
								"required": [
									"assetAddress",
									"assetType",
									"receiver"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"referralCode": {
										"type": "string"
									},
									"bio": {
										"type": "string"
									},
									"displayName": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/users/wallets": {
			"get": {
				"operationId": "GetLinkedWallets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Wallet"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/users/main-wallet": {
			"post": {
				"operationId": "SetMainWallet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"mainWallet": {
										"type": "string"
									}
								},
								"required": [
									"mainWallet"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/users/wallets/create": {
			"post": {
				"operationId": "CreateWallet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"address": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"address",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/users/search": {
			"get": {
				"operationId": "SearchUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ultigen/monsters/balance": {
			"get": {
				"operationId": "GetUltigenMonstersBalance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UltigenMonster"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/ultigen/eggs/balance": {
			"get": {
				"operationId": "GetUltigenEggsBalance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UltigenEggsBalance"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/ultigen/eggs/hatch": {
			"post": {
				"operationId": "HatchEggs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UltigenMonster"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									},
									"eggType": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"amount",
									"eggType"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/ultigen/eggs/buy": {
			"post": {
				"operationId": "BuyEggs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									},
									"eggType": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"amount",
									"eggType"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/ultigen/eggs/give": {
			"post": {
				"operationId": "GiveEggWithApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MessageResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"api_key_rewards": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									},
									"eggType": {
										"type": "number",
										"format": "double"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"amount",
									"eggType",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/ultigen/monsters/evolve": {
			"post": {
				"operationId": "EvolveMonster",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UltigenMonster"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"api_key_ultigen_xp": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"newMonsterId": {
										"type": "number",
										"format": "double"
									},
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"newMonsterId",
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/ultigen/monsters/xp": {
			"post": {
				"operationId": "GiveXPToMonster",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UltigenMonster"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [
					{
						"api_key_ultigen_xp": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"xp": {
										"type": "number",
										"format": "double"
									},
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"xp",
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/ultigen/monsters/{id}": {
			"get": {
				"operationId": "GetMonsterData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UltigenMonster"
								}
							}
						}
					}
				},
				"tags": [
					"Ultigen"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/leaderboard/scores": {
			"post": {
				"operationId": "AddScore",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ScoreItem"
								}
							}
						}
					}
				},
				"tags": [
					"Leaderboard"
				],
				"security": [
					{
						"api_key_scores": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									},
									"score": {
										"type": "number",
										"format": "double"
									},
									"appId": {
										"type": "string"
									}
								},
								"required": [
									"email",
									"score",
									"appId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/leaderboard/scores/{gameId}": {
			"get": {
				"operationId": "GetScoreLeaderboard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ScoreItem"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Leaderboard"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/leaderboard/scores/{gameId}/me": {
			"get": {
				"operationId": "GetUserScore",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ScoreItem"
								}
							}
						}
					}
				},
				"tags": [
					"Leaderboard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leaderboard/rank": {
			"post": {
				"operationId": "UpdateRank",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RankItem"
								}
							}
						}
					}
				},
				"tags": [
					"Leaderboard"
				],
				"security": [
					{
						"api_key_rank": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"userId": {
										"type": "string"
									},
									"rank": {
										"type": "number",
										"format": "double"
									},
									"appId": {
										"type": "string"
									}
								},
								"required": [
									"userId",
									"rank",
									"appId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/leaderboard/rank/{appId}": {
			"get": {
				"operationId": "GetRankLeaderboard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RankItem"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Leaderboard"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/leaderboard/rank/{gameId}/me": {
			"get": {
				"operationId": "GetUserRank",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RankItem"
								}
							}
						}
					}
				},
				"tags": [
					"Leaderboard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "gameId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/gen2/sale-signature": {
			"post": {
				"operationId": "GetGen2SaleSignature",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"signature": {
											"type": "string"
										},
										"nonce": {
											"$ref": "#/components/schemas/BigNumber"
										},
										"price": {
											"type": "string"
										},
										"referral": {
											"type": "string"
										},
										"amount": {
											"type": "number",
											"format": "double"
										},
										"eggType": {
											"type": "number",
											"format": "double"
										},
										"receiver": {
											"type": "string"
										}
									},
									"required": [
										"signature",
										"nonce",
										"price",
										"referral",
										"amount",
										"eggType",
										"receiver"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Gen2"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"referral": {
										"type": "string"
									},
									"amount": {
										"type": "number",
										"format": "double"
									},
									"eggType": {
										"type": "number",
										"format": "double"
									},
									"receiver": {
										"type": "string"
									}
								},
								"required": [
									"referral",
									"amount",
									"eggType",
									"receiver"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/gen2/price": {
			"get": {
				"operationId": "GetGen2SalePrice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"price": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"price"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Gen2"
				],
				"security": [],
				"parameters": []
			}
		},
		"/gen2/balance": {
			"get": {
				"operationId": "GetGen2Balance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/HatchyBalance"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Gen2"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/games/saves/{saveId}": {
			"delete": {
				"operationId": "DeleteGameSave",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Game"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "saveId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateGameSave",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GameSave"
								}
							}
						}
					}
				},
				"tags": [
					"Game"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "saveId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"data": {
										"properties": {},
										"additionalProperties": {},
										"type": "object"
									}
								},
								"required": [
									"data"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetGameSave",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GameSave"
								}
							}
						}
					}
				},
				"tags": [
					"Game"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "saveId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/games/saves": {
			"post": {
				"operationId": "CreateGameSave",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GameSave"
								}
							}
						}
					}
				},
				"tags": [
					"Game"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"saveName": {
										"type": "string"
									},
									"data": {
										"properties": {},
										"additionalProperties": {},
										"type": "object"
									},
									"gameId": {
										"type": "string"
									}
								},
								"required": [
									"data",
									"gameId"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllGameSaves",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GameSave"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Game"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "gameId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/games": {
			"get": {
				"operationId": "GetGame",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Game"
								}
							}
						}
					}
				},
				"tags": [
					"Game"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/games/list": {
			"get": {
				"operationId": "GetGames",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Game"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Game"
				],
				"security": [],
				"parameters": []
			}
		},
		"/contracts": {
			"get": {
				"operationId": "GetContracts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Contract"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Contracts"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateContract",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Contract"
								}
							}
						}
					}
				},
				"tags": [
					"Contracts"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateContractParams"
							}
						}
					}
				}
			}
		},
		"/contracts/{uid}": {
			"put": {
				"operationId": "UpdateContract",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Contract"
								}
							}
						}
					}
				},
				"tags": [
					"Contracts"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "uid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateContractParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteContract",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Contracts"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "uid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/wallet": {
			"get": {
				"operationId": "GetWalletAuthMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WalletSignatureMessage"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostWalletAuthSignature",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthCustomToken"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"signature": {
										"type": "string"
									},
									"address": {
										"type": "string"
									}
								},
								"required": [
									"signature",
									"address"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"referralCode": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/assets/agreement": {
			"get": {
				"operationId": "GetAssetsAgreement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/AssetAgreement"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Assets"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "PostAssetsAgreement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AssetAgreement"
								}
							}
						}
					}
				},
				"tags": [
					"Assets"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"role": {
										"type": "string"
									},
									"accepted": {
										"type": "boolean"
									}
								},
								"required": [
									"role",
									"accepted"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/assets": {
			"get": {
				"operationId": "GetAssets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Asset"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Assets"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateAsset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Asset"
								}
							}
						}
					}
				},
				"tags": [
					"Assets"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAssetParams"
							}
						}
					}
				}
			}
		},
		"/assets/{uid}": {
			"delete": {
				"operationId": "DeleteAsset",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Assets"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "uid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api-keys": {
			"get": {
				"operationId": "GetApiKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ApiKey"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"ApiKeys"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiKey"
								}
							}
						}
					}
				},
				"tags": [
					"ApiKeys"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateApiKeyParams"
							}
						}
					}
				}
			}
		},
		"/api-keys/{uid}": {
			"delete": {
				"operationId": "DeleteApiKey",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"ApiKeys"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "uid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}